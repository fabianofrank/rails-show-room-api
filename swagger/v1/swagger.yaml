---
openapi: 3.0.1
info:
  title: API V1
  version: v1
paths:
  "/api/v1/cars":
    get:
      summary: Retrieves Cars
      tags:
      - Cars
      parameters:
      - name: page
        in: query
        schema:
          type: integer
      - name: per_page
        in: query
        schema:
          type: integer
      responses:
        '200':
          description: Cars retrieved
    post:
      summary: Create a Car
      tags:
      - Cars
      security:
      - bearer: []
      parameters: []
      responses:
        '201':
          description: Car created
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                brand:
                  type: string
                model:
                  type: string
                finance_fee:
                  type: integer
                purchase_fee:
                  type: integer
                tap:
                  type: integer
                duration:
                  type: integer
                description:
                  type: text
              required:
              - brand
              - finance_fee
              - model
              - tap
              - duration
              - description
  "/api/v1/cars/{id}":
    parameters:
    - name: id
      in: path
      description: id
      required: true
      schema:
        type: string
    delete:
      summary: Delete Car
      tags:
      - Car
      security:
      - bearer: []
      responses:
        '201':
          description: Car deleted
  "/api/v1/reservations":
    get:
      summary: Retrieves Reservations
      tags:
      - Reservations
      parameters:
      - name: page
        in: query
        schema:
          type: integer
      - name: per_page
        in: query
        schema:
          type: integer
      responses:
        '200':
          description: Reservations retrieved
  "/api/v1/users/{user_username}/reservations":
    parameters:
    - name: user_username
      in: path
      description: user_username
      required: true
      schema:
        type: string
    post:
      summary: Create a Reservation
      tags:
      - Reservations
      security:
      - Bearer: []
      parameters: []
      responses:
        '201':
          description: Reservation created
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                date:
                  type: date
                city:
                  type: string
                car_id:
                  type: bigint
              required:
              - date
              - city
              - car_id
          application/xml:
            schema:
              type: object
              properties:
                date:
                  type: date
                city:
                  type: string
                car_id:
                  type: bigint
              required:
              - date
              - city
              - car_id
  "/api/v1/users/{user_username}/reservations/{id}":
    parameters:
    - name: username
      in: path
      description: username
      required: true
      schema:
        type: string
    - name: id
      in: path
      description: id
      required: true
      schema:
        type: string
    delete:
      summary: Delete Reservation
      tags:
      - Reservation
      security:
      - Bearer: []
      responses:
        '201':
          description: Reservation deleted
  "/api/v1/sessions":
    post:
      summary: Create a user session
      tags:
      - User session
      parameters: []
      responses:
        '201':
          description: User session created
        '404':
          description: invalid request
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
              required:
              - username
          application/xml:
            schema:
              type: object
              properties:
                username:
                  type: string
              required:
              - username
  "/api/v1/users":
    post:
      summary: Create a User
      tags:
      - Users
      parameters: []
      responses:
        '201':
          description: User created
        '400':
          description: Invalid request
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
              required:
              - username
          application/xml:
            schema:
              type: object
              properties:
                username:
                  type: string
              required:
              - username
components:
  securitySchemes:
    Bearer:
      type: apiKey
      name: Authorization
      in: header
      description: Bearer token
servers:
- url: http://{defaultHost}
  variables:
    defaultHost:
      default: localhost:3000
